@page "/addproduct"
@inject IAddProductUseCase AddProductUseCase
@inject IGetCategoryByIdUseCase GetCategoryByIdUseCase
@inject IViewCategoriesUseCase ViewCategoriesUseCase
@inject NavigationManager NavigationManager

<h3>Add Product</h3>

@if(product is not null)
{
    <EditForm Model="product" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group pb-3">
            <label for="name">Name</label>
            <InputText id="name" @bind-Value="product.Name" class="form-control"></InputText>
        </div>
        <div class="form-group pb-3">
            <label for="category">Category</label>
            <select class="form-select" id="category" @bind="@product.CategoryId">
                <option></option>
                @foreach (var cat in categories)
                {
                    <option value="@cat.CategoryId">@cat.Name</option>
                }
            </select>
        </div>
        <div class="form-group pb-3">
            <label for="price">Price</label>
            <InputNumber id="price" @bind-Value="product.Price" @bind-Value:format="F2" class="form-control"></InputNumber>
        </div>
        <div class="form-group pb-3">
            <label for="quantity">Quantity</label>
            <InputNumber id="quantity" @bind-Value="product.Quantity" class="form-control"></InputNumber>
        </div>

        <button type="submit" class="btn btn-success">Save</button>
        <button type="button" class="btn btn-primary" @onclick="OnCancel">Cancel</button>
    </EditForm>
}

@code {
    private Product product;
    private IEnumerable<Category> categories;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        product = new Product();
        categories = ViewCategoriesUseCase.Execute();
    }

    private void OnValidSubmit()
    {
        AddProductUseCase.Execute(product);
        NavigationManager.NavigateTo("/products");
    }
    private void OnCancel()
    {
        NavigationManager.NavigateTo("/products");
    }
}